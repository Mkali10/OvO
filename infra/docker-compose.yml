version: '3.8'
services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    volumes:
      - redisdata:/data

  kamailio:
    image: kamailio/kamailio:5.5
    container_name: kamailio
    restart: unless-stopped
    ports:
      - "5060:5060/udp"
      - "5060:5060/tcp"
    volumes:
      - ../kamailio/cfg:/etc/kamailio

  asterisk:
    build: ../asterisk
    container_name: asterisk
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "5060:5060/udp"
      - "5060:5060/tcp"
      - "10000-20000:10000-20000/udp"
    volumes:
      - /var/spool/asterisk/monitor:/var/spool/asterisk/monitor
      - ../asterisk/etc:/etc/asterisk
      - ../asterisk/log:/var/log/asterisk

  web:
    build: ../web/backend
    container_name: web
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${POSTGRES_PASSWORD}@postgres:5432/${DB_NAME}
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - redis
      - asterisk

  ai:
    build: ../ai
    container_name: ai
    restart: unless-stopped
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - web

  prometheus:
    image: prom/prometheus:2.46.0
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.5.0
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  pgdata:
  redisdata:
  grafana-data:
